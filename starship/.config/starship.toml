format = """
[  ](bg:#9A348E fg:#1E90FF)\
$username\
[ 📂](bg:#DA627D fg:#9A348E)\
$directory\
[ ](bg:#FCA17D fg:#DA627D)\
$git_branch\
$git_commit\
$git_state\
$git_status\
[ ](fg:#FCA17D bg:#86BBD8)\
$custom\
$shell\
$c\
$python\
$rust\
$java\
$elixir\
$elm\
$golang\
$haskell\
$julia\
$nodejs\
$nim\
[ ](fg:#86BBD8 bg:#33658A)\
$time$status\
[](fg:#33658A)\
\n$character"""

# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

# Disable the blank line at the start of the prompt
add_newline = true

[character]
success_symbol = '[➜](bold green) '
error_symbol = '[✗](bold red) '

# You can also replace your username with a neat symbol like  to save some space
[username]
show_always = true
style_user = "bg:#9A348E"
style_root = "bg:#9A348E"
format = '[$user ]($style)'

# Disable the package module, hiding it from the prompt completely
[package]
disabled = false

[directory]
style = "bg:#DA627D"
format = "[ $path ]($style)"
truncation_length = 3
truncation_symbol = "… /"
 
# Here is how you can shorten some long paths by text replacement
# similar to mapped_locations in Oh My Posh:
[directory.substitutions]
"Documents" = "📄 "
"Downloads" = "📥 "
"Music" = "🎜 "
"Pictures" = "📷 "
# Keep in mind that the order matters. For example:
# "Important Documents" = "  "
# will not be replaced, because "Documents" was already substituted before.
# So either put "Important Documents" before "Documents" or use the substituted version:
# "Important  " = "  "

[singularity]
format = '[📦 \[$env\]]($style) '

[custom.sh]
symbol = " "
style = "bg:#86BBD8"
command = 'echo sh' # shows output of command
detect_files = ['sh'] # can specify filters but wildcards are not supported
detect_extensions = ['sh']
format = '[[$symbol](bg:#86BBD8 fg:#000000)]($style)'
#format = '[[$symbol $variable ](bg:#86BBD8 fg:#000000)]($style)'

[git_branch]
symbol = " "
style = "bg:#86BBD8"
truncation_length = 4
truncation_symbol = ''
#ignore_branches = ['master', 'main']
format = '[[$symbol $branch ](bg:#FCA17D fg:#1E90FF)]($style)'

[git_commit]
commit_hash_length = 4
tag_symbol = '🔖 '

[git_state]
format = '[\($state( $progress_current of $progress_total)\)]($style) '
cherry_pick = '[🍒 PICKING](bold red)'

[git_status]
conflicted = '🏳 '
up_to_date = '✓ '
untracked = '🤷 '
stashed = '📦 '
modified = '📝 '
#staged = '[++\($count\)](green)'
deleted = '🗑 '
style = "bg:#394260"
ahead = '⇡${count}'
diverged = '⇕⇡${ahead_count}⇣${behind_count}'
behind = '⇣${count}'
format = '[[($all_status $ahead_behind )](bg:#FCA17D fg:#1E90FF)]($style)'

[c]
symbol = " "
style = "bg:#86BBD8"
detect_files = ['cpp', 'c', 'cc'] # can specify filters but wildcards are not supported
format = '[[$symbol](bg:#86BBD8 fg:#4470FF)]($style)'
#format = '[[$symbol ($version) ](bg:#86BBD8 fg:#000000)]($style)'
 
[custom.cpp]
symbol = " "
style = "bg:#86BBD8"
command = 'echo c' # shows output of command
detect_files = ['cpp'] # can specify filters but wildcards are not supported
detect_extensions = ['cpp']
shell = ['g++', '-dumpversion', '-']
use_stdin = false
format = '[[$symbol](bg:#86BBD8 fg:#06a2fe)]($style)'
#format = '[[$symbol $output ](bg:#86BBD8 fg:#000000)]($style)'

[python]
python_binary = 'python3'
symbol = ' '
format = '[[$symbol](bg:#86BBD8 fg:#FFFF00)]($style)'
#format = '[[$symbol ($version) ](bg:#86BBD8 fg:#FFFF00)]($style)'

[rust]
symbol = "🦀"
style = "bg:#86BBD8"
#format = '[[$symbol ](bg:#86BBD8)]($style)'
format = '[[$symbol ($version) ](bg:#86BBD8)]($style)'

[java]
symbol = "☕ "
style = "bg:#86BBD8"
#format = '[[$symbol ($version) ](bg:#86BBD8)]($style)'
format = '[[$symbol](bg:#86BBD8)]($style)'

#--------------------------------------------------------

[golang]
symbol = "🐹 "
style = "bg:#86BBD8"
format = '[[ $symbol ($version) ](bg:#86BBD8)]($style)'
 
[haskell]
symbol = "λ "
style = "bg:#86BBD8"
format = '[[ $symbol ($version) ](bg:#86BBD8)]($style)'
 
[julia]
symbol = "ஃ "
style = "bg:#86BBD8"
format = '[[ $symbol ($version) ](bg:#86BBD8)]($style)'
 
[nodejs]
symbol = "🔷 "
style = "bg:#86BBD8"
format = '[[ $symbol ($version) ](bg:#86BBD8)]($style)'

[nim]
symbol = "👑 "
style = "bg:#86BBD8"
format = '[[ $symbol ($version) ](bg:#86BBD8)]($style)'

[docker_context]
#symbol = "🐳 "
symbol = "🐋 "
style = "bg:#06969A"
format = '[[ $symbol $context ](bg:#06969A)]($style) $path'

[elixir]
symbol = "💧 "
style = "bg:#86BBD8"
format = '[[ $symbol ($version) ](bg:#86BBD8)]($style)'

[elm]
symbol = "🌳 "
style = "bg:#86BBD8"
format = '[[ $symbol ($version) ](bg:#86BBD8)]($style)'
 
[status]
symbol = '🔴 '
success_symbol = '🟢 '
style = "bg:#33658A"
format = '[[$symbol $common_meaning $signal_name$maybe_int](bg:#33658A)]($style)'
disabled = true

[time]
disabled = false
time_format = "%T" # Hour:Minute Format
style = "bg:#33658A"
format = '[[🕐 $time ](bg:#33658A)]($style)'
